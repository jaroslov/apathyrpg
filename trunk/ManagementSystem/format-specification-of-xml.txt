Apathy Markup

What follows is the specification of the book-xml to be used by Apathy. Because we have a special layout demanded by the title of the book. To prespecify, we also have a special code for the name of the book: <Apathy />.

// the overall shape of the book
book {
    title // of the book
    ?subtitle // necessary subtitle
    author* // author list
    ?table-of-contents // optional prebook parts
    ?list-of-tables
    ?list-of-figures
    ?list-of-examples
    (
        include // out-of-line include
        part // parts of the book
    )*
}

include
    <include src="target" />

part { // a major portion of the book
    title // of the part
    [
        include
        chapter
    ]* // parts of the part
}

chapter { // next level down in the book
    title // of the chapter
    ?content // optional content occuring before sections
    section+ // various sections of the book
}

section { // recursive sections & subsections of the book
    title // of the section
    [
        ?content // not a keyword
    ]* // content occuring before subsections
    [
        section*
        ?tabular-content
    ] // subsections or table/data-driven content
}

content { // actual text etc.
    (
        ?text // a block of text
        ?list // some sort of list
        ?figure // a picture
        ?table // an embedded table
        ?example // an embedded example
    )*
}

text { // inline markup of text
    [
        <words>
        emphasis
        bold
        ...
    ]*
}

table { // as per XHTML table
}

list {
    [
        itemized-list // a bulleted list
        description-list // a list whose bullets are bold words
        numbered-list // a numbered list
    ]
}

// tabular content is database-driven
// at the beginning we give the minimum (default)
// set of fields expected from the data (item-spec)
// then we specify which parts of the data are
// placed in a table at the beginning of the content;
// the data in the table is sorted according to the
// first column; the width of the elements in the
// table are specified (tab-content-column-spec);
// finally, we describe the layout of each item;
// this layout is a title, a small table with
// additional information, followed by a block of
// text
tabular-content {
    item-spec
    tab-content-column-spec
    per-item-layout
    items+
}

item-spec {
    part+
}

tab-content-column-spec {
    (
        item-spec:part
        width
    )*
}

per-item-layout {
    title
    item-spec-table
    text
}

item-spec-table {
    (
        item-spec:part
    )*
}